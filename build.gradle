plugins {
    id 'dev.architectury.loom' version '1.10-SNAPSHOT' apply false
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'com.gradleup.shadow' version '9.0.0-rc1' apply false
    id 'me.shedaniel.unified-publishing' version '0.1.13' apply false
    id 'org.sinytra.wiki.toolkit' version '0.1.10'
}

def localPropertiesFile = file('local.properties')
if (localPropertiesFile.exists()) {
    Properties localProperties = new Properties()
    localPropertiesFile.withInputStream {
        stream -> localProperties.load(stream)
    }
    localProperties.each {
        key, value -> project.ext.set(key, value)
    }
} else {
    project.ext.set('curseforgeApiKey', System.getenv('CURSEFORGE_API_KEY') ?: '')
    project.ext.set('modrinthApiKey', System.getenv('MODRINTH_API_KEY') ?: '')
}

architectury {
    minecraft = project.minecraft_version
}

allprojects {
    group = project.mod_group
    version = project.mod_version
}

subprojects {
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'

    base {
        archivesName = "${project.mod_id}-${project.name}"
    }

    loom {
        silentMojangMappingsLicense()
    }

    repositories {
        maven { url 'https://maven.parchmentmc.org/' }
    }

    dependencies {
        minecraft "com.mojang:minecraft:${project.minecraft_version}"
        mappings loom.layered() {
            officialMojangMappings()
            parchment "org.parchmentmc.data:parchment-${project.minecraft_version}:${project.parchment_version}@zip"
        }
    }

    tasks.withType(JavaCompile).tap {
        configureEach {
            options.encoding = 'UTF-8'
            options.release = 21
        }
    }

    idea {
        module {
            downloadSources = true
            downloadJavadoc = true
        }
    }
}

wiki {
    docs {
        better_mcdonalds_mod {
            root = file('docs/better_mcdonalds_mod')
        }
    }
}